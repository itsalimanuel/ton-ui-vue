(function(c,t){typeof exports=="object"&&typeof module<"u"?t(exports,require("vue"),require("@tonconnect/ui")):typeof define=="function"&&define.amd?define(["exports","vue","@tonconnect/ui"],t):(c=typeof globalThis<"u"?globalThis:c||self,t(c.ton={},c.Vue,c.ui))})(this,function(c,t,d){"use strict";const I=Symbol("TonConnectUIContext"),U=Symbol("TonConnectUIOptionsContext");let i=null;function v(n){const e=t.ref(null);return typeof window<"u"&&!i&&(i=new d.TonConnectUI(n),e.value=i),{tonConnectUI:e,setOptions:s=>{i&&(i.uiOptions=s)}}}function y(){const n=t.inject(I),e=t.inject(U);if(!n||!e)throw new Error("TonConnectUIProvider is not properly initialized.");return{tonConnectUI:n,setOptions:e}}class p extends d.TonConnectUIError{constructor(...e){super(...e),Object.setPrototypeOf(this,p.prototype)}}class T extends p{constructor(...e){super(...e),Object.setPrototypeOf(this,T.prototype)}}const m=n=>{if(!n)throw new T("You should add <TonConnectUIProvider> on the top of the app to use TonConnect");return!0};function l(){const{tonConnectUI:n,setOptions:e}=y();return t.watchEffect(()=>{typeof window<"u"&&m(n.value)}),{tonConnectUI:n,updateOptions:s=>{e(s)}}}function h(){var s;const{tonConnectUI:n}=l(),e=t.ref(((s=n.value)==null?void 0:s.wallet)||null),o=r=>{e.value=r};return t.onMounted(()=>{n.value&&(e.value=n.value.wallet,n.value.onStatusChange(o))}),t.onUnmounted(()=>{n.value&&n.value.onStatusChange(o)}),e}function w(n=!0){const e=h();return t.computed(()=>e.value?n?d.toUserFriendlyAddress(e.value.account.address,e.value.account.chain===d.CHAIN.TESTNET):e.value.account.address:"")}function O(){var f;const{tonConnectUI:n}=l(),e=t.ref(((f=n.value)==null?void 0:f.modal.state)||null),o=a=>{e.value=a};return t.onMounted(()=>{n.value&&(e.value=n.value.modal.state,n.value.onModalStateChange(o))}),t.onUnmounted(()=>{n.value&&n.value.onModalStateChange(o)}),{state:e,open:()=>{var a;(a=n.value)==null||a.modal.open()},close:()=>{var a;(a=n.value)==null||a.modal.close()}}}function g(){const{tonConnectUI:n}=l(),e=t.ref(!1);return t.onMounted(()=>{n.value&&n.value.connectionRestored.then(()=>{e.value=!0})}),e}function M(){const{tonConnectUI:n}=l(),e=t.ref(!1),o=t.ref(null),s=t.ref([]);return{sendTransaction:async()=>{var C;if(!n.value){o.value=new Error("TonConnect UI is not initialized.");return}if(s.value.length===0){o.value=new Error("No transaction messages to send.");return}e.value=!0,o.value=null;try{await n.value.connector.sendTransaction({validUntil:Math.floor(Date.now()/1e3)+360,messages:s.value})}catch(u){(C=u==null?void 0:u.message)!=null&&C.includes("User rejects the action")?o.value=new Error("Transaction was rejected by the user."):o.value=u}finally{e.value=!1}},sending:e,error:o,messages:s,addMessage:(C,u)=>{s.value.push({address:C,amount:u})},clearMessages:()=>{s.value=[]}}}const S=t.defineComponent({name:"TonConnectButton",props:{className:{type:String,default:""},style:{type:Object,default:()=>({})}},setup(n){const e="ton-connect-button",{updateOptions:o}=l();return t.onMounted(()=>{o({buttonRootId:e})}),t.onUnmounted(()=>{o({buttonRootId:null})}),t.watch(()=>n.style,s=>{console.log(s)}),{buttonRootId:e,className:t.ref(n.className),style:t.ref(n.style)}}}),b=(n,e)=>{const o=n.__vccOpts||n;for(const[s,r]of e)o[s]=r;return o},j=["id"];function E(n,e,o,s,r,f){return t.openBlock(),t.createElementBlock("div",{id:n.buttonRootId,class:t.normalizeClass(n.className),style:t.normalizeStyle({width:"fit-content",...n.style})},null,14,j)}const P=b(S,[["render",E]]);c.TonConnectButton=P,c.TonConnectUIContext=I,c.TonConnectUIOptionsContext=U,c.createTonConnectUIProvider=v,c.useIsConnectionRestored=g,c.useSendTransaction=M,c.useTonAddress=w,c.useTonConnectModal=O,c.useTonConnectUI=l,c.useTonWallet=h,Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});
